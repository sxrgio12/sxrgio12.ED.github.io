[
{
    "pregunta": "¿Qué representa un IDE?",
    "opciones": ["Una base de datos", "Un entorno de desarrollo integrado", "Un lenguaje de programación"],
    "respuesta": "Un entorno de desarrollo integrado"
  },
  {
    "pregunta": "¿Cuál de las siguientes opciones es una ventaja del uso de entornos integrados de desarrollo?",
    "opciones": ["Reducción de errores de sintaxis", "Requiere más memoria", "Solo sirve para un lenguaje"],
    "respuesta": "Reducción de errores de sintaxis"
  },
  {
    "pregunta": "¿Qué tipo de herramienta es Eclipse?",
    "opciones": ["Compilador", "Editor de texto", "IDE"],
    "respuesta": "IDE"
  },
  {
    "pregunta": "¿Cuál de las siguientes no es una característica común de los IDE?",
    "opciones": ["Depuración", "Compilación", "Gestión de redes"],
    "respuesta": "Gestión de redes"
  },
  {
    "pregunta": "¿Qué es el control de versiones?",
    "opciones": ["Un método para crear nuevas versiones del sistema operativo", "Una técnica para rastrear cambios en el código", "Una forma de compilar proyectos grandes"],
    "respuesta": "Una técnica para rastrear cambios en el código"
  },
  {
    "pregunta": "¿Qué sistema de control de versiones es distribuido?",
    "opciones": ["CVS", "Subversion", "Git"],
    "respuesta": "Git"
  },
  {
    "pregunta": "¿Cuál de los siguientes comandos de Git se usa para subir cambios al repositorio remoto?",
    "opciones": ["git push", "git pull", "git init"],
    "respuesta": "git push"
  },
  {
    "pregunta": "¿Qué comando de Git se usa para clonar un repositorio remoto?",
    "opciones": ["git start", "git clone", "git copy"],
    "respuesta": "git clone"
  },
  {
    "pregunta": "¿Qué es un repositorio en Git?",
    "opciones": ["Una copia del sistema operativo", "Un conjunto de archivos con historial de versiones", "Una carpeta de usuario local"],
    "respuesta": "Un conjunto de archivos con historial de versiones"
  },
  {
    "pregunta": "¿Qué representa el símbolo ~ en UML?",
    "opciones": ["Privado", "Protegido", "Paquete"],
    "respuesta": "Paquete"
  },
  {
    "pregunta": "¿Qué se entiende por clase abstracta?",
    "opciones": ["Una clase que no puede tener atributos", "Una clase que no puede instanciarse", "Una clase con solo métodos estáticos"],
    "respuesta": "Una clase que no puede instanciarse"
  },
  {
    "pregunta": "¿Qué diagrama de UML muestra la interacción entre objetos en el tiempo?",
    "opciones": ["Diagrama de casos de uso", "Diagrama de clases", "Diagrama de secuencia"],
    "respuesta": "Diagrama de secuencia"
  },
  {
    "pregunta": "¿Cuál es el propósito de la herencia en POO?",
    "opciones": ["Evitar errores", "Reutilizar código", "Crear variables globales"],
    "respuesta": "Reutilizar código"
  },
  {
    "pregunta": "¿Qué operador se usa para indicar herencia en Java?",
    "opciones": ["extends", "implements", "inherits"],
    "respuesta": "extends"
  },
  {
    "pregunta": "¿Qué palabra clave se usa para implementar una interfaz en Java?",
    "opciones": ["extends", "inherits", "implements"],
    "respuesta": "implements"
  },
  {
    "pregunta": "¿Qué se representa en un diagrama de clases?",
    "opciones": ["La secuencia de eventos", "Las clases, atributos, métodos y relaciones", "Los actores y casos de uso"],
    "respuesta": "Las clases, atributos, métodos y relaciones"
  },
  {
    "pregunta": "¿Qué tipo de relación se representa con una línea con rombo vacío en UML?",
    "opciones": ["Asociación", "Agregación", "Composición"],
    "respuesta": "Agregación"
  },
  {
    "pregunta": "¿Qué es una excepción en Java?",
    "opciones": ["Un valor nulo", "Un error que ocurre en tiempo de compilación", "Un evento que altera el flujo normal del programa"],
    "respuesta": "Un evento que altera el flujo normal del programa"
  },
  {
    "pregunta": "¿Cuál es el paquete principal para manejo de excepciones en Java?",
    "opciones": ["java.util", "java.io", "java.lang"],
    "respuesta": "java.lang"
  },
  {
    "pregunta": "¿Qué palabra clave se utiliza para capturar una excepción?",
    "opciones": ["try", "catch", "throw"],
    "respuesta": "catch"
  },
  {
    "pregunta": "¿Qué hace el bloque finally en Java?",
    "opciones": ["Ejecuta código después del catch", "Ignora errores", "Define la excepción"],
    "respuesta": "Ejecuta código después del catch"
  },
  {
    "pregunta": "¿Qué representa la palabra clave throw?",
    "opciones": ["Crear una excepción nueva", "Ignorar una excepción", "Capturar una excepción"],
    "respuesta": "Crear una excepción nueva"
  },
  {
    "pregunta": "¿Qué clase se usa para capturar excepciones generales en Java?",
    "opciones": ["Exception", "Throwable", "IOException"],
    "respuesta": "Exception"
  },
  {
    "pregunta": "¿Qué diferencia hay entre checked y unchecked exceptions?",
    "opciones": ["Las checked se deben manejar obligatoriamente", "Las unchecked son errores de sintaxis", "Las checked son más comunes"],
    "respuesta": "Las checked se deben manejar obligatoriamente"
  },
  {
    "pregunta": "¿Qué permite una herramienta de integración continua?",
    "opciones": ["Eliminar ramas en Git", "Compilar código automáticamente", "Crear interfaces gráficas"],
    "respuesta": "Compilar código automáticamente"
  },
  {
    "pregunta": "¿Qué es Jenkins?",
    "opciones": ["Un framework de Java", "Una herramienta de integración continua", "Un sistema operativo"],
    "respuesta": "Una herramienta de integración continua"
  },
  {
    "pregunta": "¿Cuál es la función del comando javac?",
    "opciones": ["Ejecutar programas Java", "Compilar programas Java", "Eliminar código"],
    "respuesta": "Compilar programas Java"
  },
  {
    "pregunta": " formato se usa para describir interfaces en JavaFX?",
    "opciones": ["HTML", "FXML", "JSON"],
    "respuesta": "FXML"
  },
  {
    "pregunta": "¿Qué componente de JavaFX representa una caja de texto?",
    "opciones": ["Label", "TextArea", "TextField"],
    "respuesta": "TextField"
  },
  {
    "pregunta": "¿Qué clase en Java se usa para trabajar con fechas y horas modernas?",
    "opciones": ["Date", "Calendar", "LocalDateTime"],
    "respuesta": "LocalDateTime"
  },
  {
    "pregunta": "¿Qué comando se usa en Git para ver el historial de commits?",
    "opciones": ["git status", "git history", "git log"],
    "respuesta": "git log"
  },
  {
    "pregunta": "¿Qué comando crea un nuevo repositorio en Git?",
    "opciones": ["git create", "git init", "git add"],
    "respuesta": "git init"
  },
  {
    "pregunta": "¿Qué se logra con la integración continua?",
    "opciones": ["Pruebas automáticas y despliegue continuo", "División del código", "Solo validación de formularios"],
    "respuesta": "Pruebas automáticas y despliegue continuo"
  },
  {
    "pregunta": "¿Qué es Maven?",
    "opciones": ["Un compilador", "Un sistema de control de versiones", "Una herramienta de gestión de proyectos Java"],
    "respuesta": "Una herramienta de gestión de proyectos Java"
  },
  {
    "pregunta": "¿Qué tipo de lenguaje es XML?",
    "opciones": ["De programación", "De marcado", "Compilado"],
    "respuesta": "De marcado"
  },
  {
    "pregunta": "¿Qué representa la palabra clave `super` en Java?",
    "opciones": ["Una constante", "Acceso a la clase padre", "Creación de objetos"],
    "respuesta": "Acceso a la clase padre"
  },
  {
    "pregunta": "¿Qué significa que un método sea `abstract`?",
    "opciones": ["Está implementado en la clase", "Debe implementarse en las subclases", "Es privado"],
    "respuesta": "Debe implementarse en las subclases"
  },
  {
    "pregunta": "¿Cuál es la extensión de un archivo Java compilado?",
    "opciones": [".java", ".javac", ".class"],
    "respuesta": ".class"
  },
  {
    "pregunta": "¿Qué herramienta de JavaFX define interfaces gráficas?",
    "opciones": ["SceneBuilder", "FXMLViewer", "JCreator"],
    "respuesta": "SceneBuilder"
  },
  {
    "pregunta": "¿Qué palabra clave se usa para heredar de una clase en Java?",
    "opciones": ["inherits", "extends", "implements"],
    "respuesta": "extends"
  },
  {
    "pregunta": "¿Qué indica la notación `<<interface>>` en un diagrama UML?",
    "opciones": ["Una clase abstracta", "Una interfaz", "Una librería"],
    "respuesta": "Una interfaz"
  },
  {
    "pregunta": "¿Qué es una relación de dependencia en UML?",
    "opciones": ["Una clase que contiene otra", "Una clase que usa otra", "Una clase que hereda de otra"],
    "respuesta": "Una clase que usa otra"
  },
  {
    "pregunta": "¿Qué tipo de relación representa un diamante sólido en UML?",
    "opciones": ["Agregación", "Composición", "Herencia"],
    "respuesta": "Composición"
  },
  {
    "pregunta": "¿Qué comando de Git se usa para ver archivos modificados?",
    "opciones": ["git log", "git status", "git branch"],
    "respuesta": "git status"
  },
  {
    "pregunta": "¿Qué representa una rama en Git?",
    "opciones": ["Una carpeta", "Una línea de desarrollo", "Una versión fija"],
    "respuesta": "Una línea de desarrollo"
  },
  {
    "pregunta": "¿Qué hace `git merge`?",
    "opciones": ["Fusiona ramas", "Crea commits", "Elimina cambios"],
    "respuesta": "Fusiona ramas"
  },
  {
    "pregunta": "¿Qué hace el comando `git pull`?",
    "opciones": ["Sube cambios", "Borra archivos", "Actualiza el repositorio local con cambios remotos"],
    "respuesta": "Actualiza el repositorio local con cambios remotos"
  },
  {
    "pregunta": "¿Qué es `README.md`?",
    "opciones": ["Un archivo de configuración", "Un archivo de texto con información del proyecto", "Un ejecutable"],
    "respuesta": "Un archivo de texto con información del proyecto"
  },
  {
    "pregunta": "¿Qué es un commit en Git?",
    "opciones": ["Un cambio guardado con un mensaje", "Una carpeta temporal", "Una rama alternativa"],
    "respuesta": "Un cambio guardado con un mensaje"
  },
  {
    "pregunta": "¿Qué se usa para automatizar pruebas?",
    "opciones": ["Jenkins", "JUnit", "JavaFX"],
    "respuesta": "JUnit"
  },
  {
    "pregunta": "¿Qué archivo define las dependencias en un proyecto Maven?",
    "opciones": ["build.gradle", "pom.xml", "settings.xml"],
    "respuesta": "pom.xml"
  },
  {
    "pregunta": "¿Qué es un artefacto en Maven?",
    "opciones": ["Una herramienta de compilación", "Una versión del proyecto compilado", "Un plugin externo"],
    "respuesta": "Una versión del proyecto compilado"
  },
  {
    "pregunta": "¿Qué es GitHub?",
    "opciones": ["Un lenguaje de programación", "Un sistema operativo", "Una plataforma para alojar repositorios Git"],
    "respuesta": "Una plataforma para alojar repositorios Git"
  },
  {
    "pregunta": "¿Qué herramienta permite integración continua con GitHub?",
    "opciones": ["IntelliJ", "GitLab", "GitHub Actions"],
    "respuesta": "GitHub Actions"
  },
  {
    "pregunta": "¿Qué significa `ctrl + z` en muchas herramientas?",
    "opciones": ["Rehacer", "Guardar", "Deshacer"],
    "respuesta": "Deshacer"
  },
  {
    "pregunta": "¿Cuál es el propósito de `System.out.println()` en Java?",
    "opciones": ["Leer datos", "Mostrar datos en consola", "Cerrar aplicación"],
    "respuesta": "Mostrar datos en consola"
  },
  {
    "pregunta": "¿Qué hace el método `main()` en Java?",
    "opciones": ["Es el punto de entrada de ejecución", "Define una interfaz", "Contiene atributos globales"],
    "respuesta": "Es el punto de entrada de ejecución"
  },
  {
    "pregunta": "¿Qué significa que un método sea `static`?",
    "opciones": ["No necesita una instancia para usarse", "Solo se puede usar una vez", "Es abstracto"],
    "respuesta": "No necesita una instancia para usarse"
  },
  {
    "pregunta": "¿Qué es un IDE?",
    "opciones": ["Un editor de texto plano", "Un entorno que integra herramientas de desarrollo", "Un lenguaje de programación"],
    "respuesta": "Un entorno que integra herramientas de desarrollo"
  },
  {
    "pregunta": "¿Qué hace un depurador?",
    "opciones": ["Detecta errores lógicos en tiempo de ejecución", "Compila programas", "Guarda archivos"],
    "respuesta": "Detecta errores lógicos en tiempo de ejecución"
  },
  {
    "pregunta": "¿Qué comando en Git crea una nueva rama?",
    "opciones": ["git new", "git branch", "git clone"],
    "respuesta": "git branch"
  },
  {
    "pregunta": "¿Para qué sirve el comando `git checkout`?",
    "opciones": ["Cambiar de rama", "Crear rama", "Eliminar rama"],
    "respuesta": "Cambiar de rama"
  },
  {
    "pregunta": "¿Qué indica `HEAD` en Git?",
    "opciones": ["El primer commit", "La rama principal", "El último commit actual"],
    "respuesta": "La rama principal"
  },
  {
    "pregunta": "¿Qué comando de Git revierte cambios?",
    "opciones": ["git revert", "git resume", "git undo"],
    "respuesta": "git revert"
  },
  {
    "pregunta": "¿Cuál de estas herramientas no es un sistema de control de versiones?",
    "opciones": ["Git", "SVN", "MySQL"],
    "respuesta": "MySQL"
  },
  {
    "pregunta": "¿Qué significa `DRY` en desarrollo de software?",
    "opciones": ["Don’t Repeat Yourself", "Do Repeat Yourself", "Data Repeat Yield"],
    "respuesta": "Don’t Repeat Yourself"
  },
  {
    "pregunta": "¿Qué es una refactorización?",
    "opciones": ["Modificar código sin cambiar su comportamiento", "Eliminar métodos", "Compilar en otro lenguaje"],
    "respuesta": "Modificar código sin cambiar su comportamiento"
  },
  {
    "pregunta": "¿Qué es un entorno de producción?",
    "opciones": ["Donde trabajan los desarrolladores", "Donde se prueban funciones", "Donde se usa la aplicación real por los usuarios"],
    "respuesta": "Donde se usa la aplicación real por los usuarios"
  },
  {
    "pregunta": "¿Qué representa un actor en un diagrama de casos de uso?",
    "opciones": ["Una clase", "Un método", "Un usuario o sistema externo"],
    "respuesta": "Un usuario o sistema externo"
  },
  {
    "pregunta": "¿Qué palabra clave define una clase en Java?",
    "opciones": ["define", "class", "new"],
    "respuesta": "class"
  },
  {
    "pregunta": "¿Qué representa una flecha en un diagrama de secuencia?",
    "opciones": ["Creación de objetos", "Intercambio de mensajes", "Jerarquía de clases"],
    "respuesta": "Intercambio de mensajes"
  },
  {
    "pregunta": "¿Qué indica una línea discontinua en UML?",
    "opciones": ["Herencia", "Interfaz", "Mensaje de retorno"],
    "respuesta": "Mensaje de retorno"
  },
  {
    "pregunta": "¿Qué tipo de visibilidad representa `+` en UML?",
    "opciones": ["Privada", "Protegida", "Pública"],
    "respuesta": "Pública"
  },
  {
    "pregunta": "¿Qué permite la modularidad en programación?",
    "opciones": ["Dividir el programa en partes independientes", "Hacer un solo archivo", "Unir todas las clases en una sola"],
    "respuesta": "Dividir el programa en partes independientes"
  },
  {
    "pregunta": "¿Qué es una variable de instancia?",
    "opciones": ["Se comparte entre todas las instancias", "Pertenece a cada objeto", "Se define como estática"],
    "respuesta": "Pertenece a cada objeto"
  },
  {
    "pregunta": "¿Qué método se ejecuta primero al iniciar un programa Java?",
    "opciones": ["run()", "start()", "main()"],
    "respuesta": "main()"
  },
  {
    "pregunta": "¿Qué es una excepción controlada (checked exception)?",
    "opciones": ["Debe manejarse obligatoriamente", "Ocurre en tiempo de ejecución", "Es opcional"],
    "respuesta": "Debe manejarse obligatoriamente"
  },
  {
    "pregunta": "¿Qué clase permite leer datos desde el teclado en Java?",
    "opciones": ["BufferedReader", "Scanner", "DataInputStream"],
    "respuesta": "Scanner"
  },
  {
    "pregunta": "¿Qué es un constructor en Java?",
    "opciones": ["Un método que crea interfaces", "Un método especial que inicializa objetos", "Un atributo de clase"],
    "respuesta": "Un método especial que inicializa objetos"
  },
  {
    "pregunta": "¿Qué significa sobrecarga de métodos?",
    "opciones": ["Un método especial que inicializa objetos", "Mismos nombres y mismos parámetros", "Diferentes nombres"],
    "respuesta": "Un método especial que inicializa objetos"
  },
  {
    "pregunta": "¿Qué método se usa para comparar cadenas ignorando mayúsculas?",
    "opciones": ["equals()", "equalsIgnoreCase()", "compareTo()"],
    "respuesta": "equalsIgnoreCase()"
  },
  {
    "pregunta": "¿Qué clase en Java representa una fecha sin hora?",
    "opciones": ["LocalTime", "LocalDate", "Calendar"],
    "respuesta": "LocalDate"
  },
  {
    "pregunta": "¿Qué hace `setText()` en JavaFX?",
    "opciones": ["Asigna texto a una etiqueta", "Cierra la ventana", "Ejecuta código Java"],
    "respuesta": "Asigna texto a una etiqueta"
  },
  {
    "pregunta": "¿Qué palabra clave se usa para definir una constante?",
    "opciones": ["var", "const", "final"],
    "respuesta": "final"
  },
  {
    "pregunta": "¿Qué es una interfaz en Java?",
    "opciones": ["Una clase normal", "Una clase abstracta", "Una colección de métodos sin implementación"],
    "respuesta": "Una colección de métodos sin implementación"
  },
  {
    "pregunta": "¿Qué clase se usa para mostrar alertas en JavaFX?",
    "opciones": ["Popup", "Dialog", "Alert"],
    "respuesta": "Alert"
  },
  {
    "pregunta": "¿Qué representa el patrón MVC?",
    "opciones": ["Modelo Vista Controlador", "Modelo Variable Código", "Módulo Visual Componente"],
    "respuesta": "Modelo Vista Controlador"
  },
  {
    "pregunta": "¿Qué método convierte texto en número entero?",
    "opciones": ["parseInt()", "toInt()", "stringToInt()"],
    "respuesta": "parseInt()"
  },
  {
    "pregunta": "¿Qué comando de Git elimina una rama?",
    "opciones": ["git remove", "git branch -d", "git delete"],
    "respuesta": "git branch -d"
  },
  {
    "pregunta": "¿Qué representa el archivo `.gitignore`?",
    "opciones": ["Define las ramas protegidas", "Lista de archivos que no se deben subir al repo", "Contiene el historial de cambios"],
    "respuesta": "Lista de archivos que no se deben subir al repo"
  },
  {
    "pregunta": "¿Qué herramienta se usa para subir un proyecto a GitHub?",
    "opciones": ["Eclipse", "Git", "JavaFX"],
    "respuesta": "Git"
  },
  {
    "pregunta": "¿Qué lenguaje usa FXML?",
    "opciones": ["Java", "XML", "JSON"],
    "respuesta": "XML"
  },
  {
    "pregunta": "¿Qué permite el diseño modular?",
    "opciones": ["Separar responsabilidades", "Mezclar capas", "Evitar librerías"],
    "respuesta": "Separar responsabilidades"
  },
  {
    "pregunta": "¿Qué operador se usa para concatenar cadenas en Java?",
    "opciones": ["&", "+", "++"],
    "respuesta": "+"
  },
  {
    "pregunta": "¿Qué símbolo se usa en Java para comentarios de una línea?",
    "opciones": ["//", "#", "/*"],
    "respuesta": "//"
  },
  {
    "pregunta": "¿Qué método se usa para imprimir texto en consola en Java?",
    "opciones": ["print()", "write()", "System.out.println()"],
    "respuesta": "System.out.println()"
  }
]
